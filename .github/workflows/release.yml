name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Update version in code
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          # Remove 'v' prefix for version string
          VERSION_NO_V=${VERSION#v}
          
          # Update only Server Version in config.go, not APIVersion
          sed -i '/Server: ServerConfig{/,/}/ s/Version:.*".*"/Version:      "'"${VERSION_NO_V}"'"/' internal/config/config.go
          
          # Update go.mod if needed
          go mod tidy

      - name: Run tests
        run: go test ./...

      - name: Build binaries
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Create build directory
          mkdir -p build
          
          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=${VERSION}" -o build/mcp-defect-dojo-linux-amd64 ./cmd/mcp-server
          GOOS=linux GOARCH=arm64 go build -ldflags "-X main.version=${VERSION}" -o build/mcp-defect-dojo-linux-arm64 ./cmd/mcp-server
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.version=${VERSION}" -o build/mcp-defect-dojo-darwin-amd64 ./cmd/mcp-server
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=${VERSION}" -o build/mcp-defect-dojo-darwin-arm64 ./cmd/mcp-server
          GOOS=windows GOARCH=amd64 go build -ldflags "-X main.version=${VERSION}" -o build/mcp-defect-dojo-windows-amd64.exe ./cmd/mcp-server
          
          # Create checksums
          cd build
          sha256sum * > checksums.txt

      - name: Generate changelog
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            echo "changelog=Initial release of MCP DefectDojo Server" >> $GITHUB_OUTPUT
          else
            # Generate changelog from commits
            CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD | grep -v "^- Merge")
            if [ -z "$CHANGELOG" ]; then
              CHANGELOG="- Bug fixes and improvements"
            fi
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGELOG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            ### Go Module
            ```bash
            go get github.com/brduru/mcp-defect-dojo@${{ steps.version.outputs.version }}
            ```
            
            ### Binary Download
            Download the appropriate binary for your platform from the assets below.
            
            ### Usage
            
            **Embedded (Library)**:
            ```go
            import "github.com/brduru/mcp-defect-dojo/pkg/mcpserver"
            
            server, err := mcpserver.NewServerWithAPIKey("your-api-key")
            if err != nil {
                log.Fatal(err)
            }
            server.Serve()
            ```
            
            **Sidecar (Binary)**:
            ```bash
            export DEFECTDOJO_API_KEY="your-api-key"
            export DEFECTDOJO_URL="https://your-defectdojo.com"
            ./mcp-defect-dojo-linux-amd64
            ```
            
            ## Checksums
            
            See `checksums.txt` for file verification.
          files: |
            build/*
          draft: false
          prerelease: false
          generate_release_notes: false

      - name: Commit version update
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add internal/config/config.go
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}" || exit 0
          git push origin main
